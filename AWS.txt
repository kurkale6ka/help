Encrypt unencrypted EBS volume / RDS database

* create a snapshot, create new encrypted EBS volume from it
* copy it into an encrypted one, create new volume/db from it

Capacity Reservations

Amazon EC2 on-demand Capacity Reservations enable you to create and manage
reserved capacity on Amazon EC2 without any long-term commitment or fixed
terms. This can be very beneficial if you regularly face
InsufficientInstanceCapacity errors when AWS doesn't have enough available
on-demand capacity while starting or launching an EC2 instance.

For cluster placement groups, capacity also means running on the 'same'
hardware and that hardware needs to be reserved.
Use Reserved Instances instead if you want to commit to 1 or 3 years

Placement groups

  cluster -  low latency,  low availability: share hardware => same EC2 type
partition -  avg latency,  avg availability: spread partitions across hardware, 7 partitions per AZ
   spread - high latency, high availability: multi AZ, 7 instances in different racks in 1 group per AZ, diff hw allows for different EC2 types

Elastic Load Balancer

ALB: distribute load based on protocol,  port and HTTP headers, ...
NLB: distribute load based on protocol & port only
     define static IPs (per AZ) for the NLB (so customers can whitelist us)

* dispatch requests to target groups based on routes, query string, headers, IPs (ALB)
                                           /url1 -> tg1
                          /url2, one.example.com -> tg2
  two.example.com, ?platform=mobile, HTTP header -> tg3

  then spread load across multiple or single (e.g containers) host(s) in the
  target group based on health checks (port + route) => seamless handling of
  downstream instances failures

* SSL termination

Service-Linked Role:
only a specific service can use this role vs a regular role which can be used by all services/users

  SG - statefull, if one way is allowed then the return way is automatically allowed
NACL - stateless, both ways are always evaluated

SG
EC2, ELB, EFS, RDS, ElastiCache

A private host behind NAT "can't" be contacted, for that you need NAT traversal:
Also known as UDP encapsulation, it allows traffic to get to the specified
destination which doesn't have a public IP address. In a S2S VPN connection, a
CGW behind NAT needs this enabled

CloudFront
   cache + S3 or http/rtmp endpoint as origin

Global Accelerator: accelerates APPS (no S3) only
no cache + no http endpoint (VOIP, IoT, ...)

kinesis DS (pub/sub)

                      SDK, KPL                SDK, KCL
1 MB/s or 1000 msg/s per shard - Kinesis DS - 2 MB/s per shard per       all (shared)
                                              2 MB/s per shard per consummer (enhanced fanout)

A persistent spot request is like an ASG. It will keep spawning instances till the end of its validity period.

1 CPU = multiple cores = multiple threads. vCPU is the total of threads.

EBS
                            max
gp3 | 1 GiB to 16 TiB |  16 000  iops | 1000 MiB/s | not multi-attach
io2 | 4 GiB to 16 TiB |  32 000 piops |            |
    |                 |  64 000 piops |            | if Nitro
    | 4 GiB to 64 TiB | 256 000 piops |            | if block express

ASG

Use golden AMI so updates, app install, ... take less time => we can use a smaller cooldown period

In AWS there is a network cost when data moves between AZs,
but not for RDS read replicas within the same region (only cross-region)

Aurora DB
writer + reader OR custom endpoint

ElastiCache
* requires heavy code changes
* no IAM auth, redis auth or Memcached SASL
redis: sorted sets for real-time leaderboards
