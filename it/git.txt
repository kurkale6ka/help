                                      Git

Everything tracked is in your staging area - the index.

git rm
------
    removes from both the index and the working copy

git rm --cached
    removes from the index only => untracks the file!

git commit --amend
------------------
    change the message of the previous commit + add any staged files

git reset
---------
HEAD    ⇒  Index    ⇒  Working dir
move       copy to     copy to
--soft     --mixed     --hard

git reset
    unstage all files
git reset file
    unstage file (opposite of git add file)
git reset --hard
    unstage everything + reset working dir
git reset HEAD~
    undo previous commit (move branch) + unstage everything

git config
----------
    ~/github/config/git.bash
    ~/.bashrc 851

git checkout
------------
git checkout -b topic master
git branch topic master && git checkout topic
    create topic from local master and check it out

git push
--------
git push origin serverfix
git push origin serverfix:serverfix
git push origin refs/heads/serverfix:refs/heads/serverfix
                               local:remote

After a git fetch that brings origin/serverfix (upstream or @{u}),
is git checkout -b serverfix origin/serverfix equivalent to
   git checkout --track origin/serverfix
   git checkout serverfix

Those create a tracking branch => git pull knows what server/branch to pull from

Set current branch to track:
    git branch -u origin/serverfix

Submodules
----------

Update:
all
git submodule foreach git pull origin master

only one
cd $my_submodule && git pull # OR
git -C my_submodule pull


Rename:
1. Delete the relevant section from the .gitmodules file
2. git add .gitmodules
3. Delete the relevant section from .git/config
4. git rm --cached bundle/_my/\* (no trailing slash)
5. rm -rf .git/modules/bundle/_my/*
6. rm -rf bundle/_my/
7. git submodule add git@github.com:kurkale6ka/vim-swap.git .bundle/swap
