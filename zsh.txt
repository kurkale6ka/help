                                      zsh

/etc/zshenv
# XDG configuration home
if [[ -z $XDG_CONFIG_HOME ]]
then
   export XDG_CONFIG_HOME=$HOME/.config
fi

export ZDOTDIR=$XDG_CONFIG_HOME/zsh

# XDG data home
if [[ -z $XDG_DATA_HOME ]]
then
   export XDG_DATA_HOME=$HOME/.local/share
fi

As your day to day user:
mkdir -p {$XDG_CONFIG_HOME,$XDG_DATA_HOME}/zsh

Right align and pad with :-: : :
for i in qw qwer qwerty; echo ${(l:19::-:: :)i}
---------------- qw
-------------- qwer
------------ qwerty

Query package owning pgrep:
rpm -qf =pgrep # dpkg -S =pgrep

> and < are 'synonyms' for cat

Truncate file:
:>file

Send both STDIN and STDERR over the pipe:
httpd -S |& grep ...

Alt-q:
Kill the whole line
do stuff, then on Enter
paste the line back

zle
---

Alt-x will open the minibuffer

Call a builtin widget, even if the behaviour has been redefined:
Ex: .end-of-line # prefix with .

Globs
-----

Glob operators:
                *, ?, []
                <x-y> numeric range
                ^x    anything except x # extended_glob
                x~y   x but not y       # extended_glob
                x#    0 or more of x    # extended_glob
                x##   1 or more of x    # extended_glob
            Ex:
                ls -l **/*<1-10>.txt

Globbing flags:
(#X) - affect text to their right; extended_glob required

                [[ hello == (#i)HELLO ]] && echo match
                ls -d -- (#i)*vim* # match files case insensitively

                (#cN,M) is equivalent to {N,M} in regex

                echo ${(L)variable} # to lower case, (U for upper)
                echo $variable:l    # to lower case  (u for upper)

Mystery: unsetopt CASE_GLOB then [[ hello == HELLO ]] && echo match # no output?
A: string matching isn't globbing. Find docs about this

Glob qualifiers:
                print -l **/*(/)    # dirs only
                print -l **/*(.)    # files only
                print -l **/*(@,.)  # links or files
                print -l **/*(L0)   # empty files
                print -l **/*(Lk+3) # greater than 3 KB
                print -l **/*(mh-1) # modified in the last hour
                print -l **/*(e:'[[ $REPLY != sometest ]]':) # estring

Modifiers:
: inside a qualifier list => the rest is interpreted as a modifier

                print -l **/*(u0^@:t) # basename (tail) of files (minus links) owned by root
                echo ${foo:gs/r/@}    # parameter expansion with global substitution

Recursive globbing:
                **/ is equivalent to (*/)#

Parameter Expansion Flags:
                line=one:two:three
                print -l ${(s.:.)line} # field splitting at :
                           j:string:   # join words in an array

Word splitting exception:

% rm $(echo a b; echo '*')
rm: cannot remove ‘a’: No such file or directory
rm: cannot remove ‘b’: No such file or directory
rm: cannot remove ‘*’: No such file or directory

% rm "$(echo a b; echo '*')"
rm: cannot remove ‘a b\n*’: No such file or directory

% rm ${(f)"$(echo a b; echo '*')"}
rm: cannot remove ‘a b’: No such file or directory
rm: cannot remove ‘*’: No such file or directory

Open clean zsh with modified PATH:
exec env PATH=/usr/local/bin/:$PATH zsh -f
