h1. {color:#3300cc}The Front Controller{color}

Zend_Controller_Front is the unique entry point to our application
It serves as a registry to the {color:#6666ff}{_}router{_}{color}, {color:#6666ff}{_}dispatcher{_}{color}, and {color:#6666ff}{_}action controllers{_}{color}
trough parameters:
{code}
$front->setParam('noErrorHandler', true);
$front->setParam('noViewRenderer', true);
{code}

h2. Different useful methods:

{code}
$front->setControllerDirectory(''); // used by the Dispatcher
$front->throwExceptions(true);      // instead of storing them into the Response
$front->returnResponse(true);       // check the stored exceptions
{code}
{code}
$front->getRouter();
{code}
Zend_Controller_Front triggers different dispatch events which could be
observed by plugins.
Thus, we don't need to extend the front controller to add functionality.

h1. {color:#3300cc}The Zend_Controller basics{color}

1.&nbsp;&nbsp;&nbsp; {color:#6666ff}{*}Zend_Router_Rewrite{*}{color}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; writes controller/action/parameter into

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {color:#6666ff}{*}Zend_Controller_Request_Http{*}{color}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; with its' own methods:
{code}
$request->setControllerName('');
$request->setActionName('');
{code}
2.&nbsp;&nbsp;&nbsp; {color:#6666ff}{*}Zend_Controller_Dispatcher_Standard{*}{color}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pulls controller/action/parameter from

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {color:#6666ff}{*}Zend_Controller_Request_Http{*}{color}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; with its' own methods:
{code}
$request->getControllerName('');
$request->getActionName('');
$request->getUserParam('');
{code}
3.&nbsp;&nbsp;&nbsp; {color:#6666ff}{*}Zend_Controller_Dispatcher_Standard{*}{color}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Loop while \!$request->isDispatched():
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Controller instantiated
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Action called

The workflow of Zend_Controller is relatively simple. A request is received by
Zend_Controller_Front, which in turn calls Zend_Controller_Router_Rewrite to
determine which controller (and action in that controller) to dispatch.
Zend_Controller_Router_Rewrite decomposes the URI&nbsp; in order to set the
controller and action names in the request. Zend_Controller_Front then enters a
dispatch loop. It calls Zend_Controller_Dispatcher_Standard, passing it the
request, to dispatch to the controller and action specified in the request (or
use defaults). After the controller has finished, control returns to
Zend_Controller_Front. If the controller has indicated that another controller
should be dispatched by resetting the dispatched status of the request, the
loop continues and another dispatch is performed. Otherwise, the process ends.

h1. {color:#3300cc}Routing{color}

*Note*: *Reverse Matching*
Routes are matched in reverse order so make sure your most generic routes are defined first.


1. {color:#6666ff}{*}Variable route{*}{color}
{code}
$route = new Zend_Controller_Router_Route(
    'archive/:year',
    array(
        'year'       => 2006,      // variable defaults (:year is our var part)
        'controller' => 'archive',
        'action'     => 'show'
    ),
    array('year' => '\d+')         // variable requirements
);
$router->addRoute('archive', $route);
{code}
2. {color:#6666ff}{*}Static route{*}{color}
{code}
$route = new Zend_Controller_Router_Route_Static(
    'login',
    array('controller' => 'auth', 'action' => 'login')
);
$router->addRoute('login', $route);
{code}
3. {color:#6666ff}{*}Regex route{*}{color}
{code}
$route = new Zend_Controller_Router_Route_Regex(
    'archive(?:/(\d+))?',
    array(
        1            => '2006',
        'controller' => 'archive',
        'action'     => 'show'
    )
    array(
        // Zend_Controller_Action::_getParam('year'); or
        // Zend_Controller_Request::getParam('year');
        1 => 'year' // or 'year' => 1
    )
);
$router->addRoute('archive', $route);
{code}

h1. {color:#3300cc}Dispatching{color}

{code}
public function bazAction()
{
    // forward to an action in another controller in another module,
    // Foo_BarController::bazAction():
    $this->_forward(
        'baz',                  // action
        'bar',                  // controller
        'foo',                  // module
        array('baz' => 'bogus') // params
    );
}
{code}

h1. {color:#3300cc}Useful links{color}

{color:#0000ff}[http://framework.zend.com/manual/en/zend.controller.html]{color}
