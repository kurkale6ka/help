https://wiki.gentoo.org/wiki/SELinux/Quick_introduction

SELinux: Mandatory Access Control

With MAC, the permissions are not governed by the owner of the resource
(ex: give r access to others), instead, they are imposed by the administrator.

If regular permissions (DAC) disallow an activity, SELinux is not even consulted

In SELinux, everything has a context (label):

..._u:..._r:..._t:sensitivity
    |     |     |
    |     |     +-- type (file, domain for process)
    |     +-- role
    +-- user

All fields are used to decide access.
Most rules however are made for the type only.

ex: httpd_t not allowed to write to etc_t locations

Policy rules:
allow auditd_t auditd_log_t:file { write };

sesearch --allow --source auditd_t --target auditd_log_t --class file --perm write

Logging locations:
/var/log/avc.log
/var/log/audit... # lines with avc

search logs:
ausearch -m avc -ts today # access vector cache since today

AVC denial:
msg=audit(1363289005.532:184) # when: date -d@1363289005.532
denied { read } for pid=29199 comm="Vim" # denied for command Vim with PID ...
name="passwd" dev="sysfs" ino=30 # trying to read file 'passwd' (inode 30)
scontext = staff_u:staff_r:..._t # Vim
tcontext = system_u:object_r:sysfs_t tclass=file # passwd

find /sys -xdev -inum 30

Troubleshooting:
sestatus
setenforce 0
restorecon
change context
touch /.autorelabel + reboot
