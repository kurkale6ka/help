          input file             video filter, short for -filter:v
         /                      /
ffmpeg -i video.mp4 -c:a copy -vf 'transpose=1, transpose=1' out.mp4 # 180Â° rotation
                       \
                        audio/video codec to use, copy meaning preserve

info:
ffprobe -v error -show_format video.mp4
ffprobe -v error -show_entries format=duration jumping.mov

cutting small sections:
ffmpeg -i video-in.mp4 -ss 11 -t duration -c copy cut.mp4
ffmpeg -i video-in.mp4 -ss 11 -to position -c copy cut.mp4
                         \
                          seek: start position

play video in a scaled down version and twice the speed:
ffplay jumping.mov -vf 'scale=220:-1,setpts=.5*PTS'

map:
a way to tell ffmpeg which streams you want to select/copy from input to output

Stream #0:0(eng): Video: h264 (High), yuv420p, 1920x800, 23.98 fps, 23.98 tbr, 1k tbn, 47.95 tbc (default)
Stream #0:1(ger): Audio: dts (DTS), 48000 Hz, 5.1(side), s16, 1536 kb/s (default)
Stream #0:2(eng): Audio: dts (DTS), 48000 Hz, 5.1(side), s16, 1536 kb/s
Stream #0:3(ger): Subtitle: text (default)

Ex: extract audio streams:
ffmpeg -i input.mkv -map 0:1 -map 0:2 -c copy output.mkv
